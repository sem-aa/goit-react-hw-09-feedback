{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/Feedback/Feedback.js","App.js","reportWebVitals.js","index.js","components/Statistics/Statistics.module.css"],"names":["module","exports","ids","require","FeedbackOptions","options","onLeaveFeedback","map","option","className","s","button","name","type","onClick","generate","Statistics","good","neutral","bad","total","positive","feedback","appraisal","Section","title","children","Notification","message","Feedback","state","e","setState","prevState","target","this","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","Object","keys","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,OAAS,kC,icCEvBC,EAAMC,EAAQ,KAoBHC,EAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,+BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBAEEC,UAAWC,IAAEC,OACbC,KAAMJ,EACNK,KAAK,SACLC,QAASR,EALX,SAOGE,GANIN,EAAIa,eAUb,gD,iBCJWC,EAZI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,SAA9B,OACjB,gCACE,sBAAKZ,UAAWC,IAAEY,SAAlB,UACE,oBAAGb,UAAWC,IAAEa,UAAhB,mBAAkCN,KAClC,oBAAGR,UAAWC,IAAEa,UAAhB,sBAAqCL,KACrC,oBAAGT,UAAWC,IAAEa,UAAhB,kBAAiCJ,QAEnC,uCAAUC,EAAV,OACA,mDAAsBC,EAAtB,WCFWG,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,gCACGD,GAAS,6BAAKA,IACdC,MCAQC,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,6BAAKA,KCiD5BC,E,4MA5CbC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPb,gBAAkB,SAACyB,GACjB,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAEG,OAAOtB,KAAOqB,EAAUF,EAAEG,OAAOtB,MAAQ,O,uDAItC,IAAD,EACwBuB,KAAKL,MAA5Bb,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBiB,EAAqBnB,EAAOC,EAAUC,EACtCkB,GACHpB,GAAQA,EAAOC,EAAUC,GAC1B,KACAmB,QAAQ,GAEV,OACE,eAAC,EAAD,CAASb,MAAM,wBAAf,UACE,cAAC,EAAD,CACEpB,QAASkC,OAAOC,KAAKL,KAAKL,OAC1BxB,gBAAiB6B,KAAK7B,kBAGA,IAAvB8B,EACC,cAAC,EAAD,CACEnB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,EACPf,SAAUgB,IAGZ,cAAC,EAAD,CAAcT,QAAQ,6B,GAtCTa,IAAMC,WCCdC,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,mBCfA5C,EAAOC,QAAU,CAAC,SAAW,6BAA6B,UAAY,iC","file":"static/js/main.3c5b7584.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__103qy\"};","import React from \"react\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nvar ids = require(\"short-id\");\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <ul>\r\n    {options.map((option) => (\r\n      <button\r\n        key={ids.generate()}\r\n        className={s.button}\r\n        name={option}\r\n        type=\"button\"\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n\r\n    <h2>Statistics</h2>\r\n  </ul>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positive }) => (\r\n  <div>\r\n    <div className={s.feedback}>\r\n      <p className={s.appraisal}>Good: {good}</p>\r\n      <p className={s.appraisal}>Neutral: {neutral}</p>\r\n      <p className={s.appraisal}>Bad: {bad}</p>\r\n    </div>\r\n    <p>Total:{total}:</p>\r\n    <p>Positive feedback:{positive}%</p>\r\n  </div>\r\n);\r\n\r\nexport default Statistics;\r\n","function Section({ title, children }) {\r\n  return (\r\n    <div>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => <h3>{message}</h3>;\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport Section from \"../Section/Section\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nclass Feedback extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = (e) => {\r\n    this.setState((prevState) => ({\r\n      [e.target.name]: prevState[e.target.name] + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    const countTotalFeedback = good + neutral + bad;\r\n    const countPositiveFeedbackPercentage = (\r\n      (good / (good + neutral + bad)) *\r\n      100\r\n    ).toFixed(0);\r\n\r\n    return (\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={Object.keys(this.state)}\r\n          onLeaveFeedback={this.onLeaveFeedback}\r\n        />\r\n\r\n        {countTotalFeedback !== 0 ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback}\r\n            positive={countPositiveFeedbackPercentage}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import \"./App.css\";\r\nimport Feedback from \"./components/Feedback/Feedback\";\r\n\r\nfunction App() {\r\n  return <Feedback />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Statistics_feedback__KcTdh\",\"appraisal\":\"Statistics_appraisal__P4Ava\"};"],"sourceRoot":""}